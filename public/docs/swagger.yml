swagger: '2.0'
info:
  description: PNPAA Restify Server API
  version: 1.0.0
  title: PNPAA API
host: pnpaa-api.herokuapp.com
basePath: /
schemes:
  - http
produces:
  - application/json
paths:
  /auth:
    post:
      tags:
        - Auth
      description: Get authentication token
      parameters:
        - name: email
          in: formData
          description: User's username.
          required: true
          type: string
        - name: password
          in: formData
          description: "User's password."
          required: true
          type: string
      responses:
        '200':
          description: Auth Token Object
          schema:
            $ref: '#/definitions/AuthToken'
        '401':
          description: Unable to login
          type: string
  /auth/verify:
    post:
      tags:
        - Auth
      description: Very if token is valid
      parameters:
        - name: Authorization
          in: header
          description: 'Authorization header. Format: `Bearer [token]`.'
          required: true
          type: string
      responses:
        '200':
          description: Token is valid
        '401':
          description: Token is has expired or has been revoked

  /discussions:
    get:
      tags:
        - Discussion
      description: Get all general discussions
      parameters:
        - name: Authorization
          in: header
          description: 'Authorization header. Format: `Bearer [token]`.'
          required: true
          type: string

        - name: offset
          in: query
          description: 'Query offset (for pagination)'
          required: false
          type: number

        - name: limit
          in: query
          description: 'Query limit (for pagination)'
          required: false
          type: number

      responses:
        '200':
          description: Array of discussion objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'

    post:
      tags:
        - Discussion
      description: Create A new discussion
      parameters:
        - name: Authorization
          in: header
          description: 'Authorization header. Format: `Bearer [token]`.'
          required: true
          type: string
        - name: content
          in: formData
          description: Content of the post
          type: string
          required: true

      responses:
        '200':
          description: Post created successfully
          schema:
            $ref: '#/definitions/Discussion'
        '422':
          description: Array of validation errors

  /discussions/{id}:
    put:
      tags:
        - Discussion
      description: Update discussion
      parameters:
        - name: Authorization
          in: header
          description: 'Authorization header. Format: `Bearer [token]`.'
          required: true
          type: string
        - name: id
          in: path
          description: Discussion id
          type: integer
          required: true
        - name: content
          in: formData
          description: Content of the post
          type: string
          required: true

      responses:
        '200':
          description: Post updated successfully
          schema:
            $ref: '#/definitions/Discussion'
        '401':
          description: Unauthorized
        '422':
          description: Array of validation errors
    delete:
      tags:
        - Discussion
      description: Delete discussion
      parameters:
        - name: Authorization
          in: header
          description: 'Authorization header. Format: `Bearer [token]`.'
          required: true
          type: string
        - name: id
          in: path
          description: Discussion id
          type: integer
          required: true

      responses:
        '200':
          description: Post deleted successfully
        '401':
          description: Unauthorized

definitions:
  Discussion:
    properties:
      id:
        type: number
      content:
        type: string
      UserId:
        type: number
      isPublic:
        type: boolean
      User:
        schema:
          $ref: '#/definitions/User'
      createdAt:
        type: string
        format: dateTime
      updatedAt:
        type: string
        format: dateTime
  User:
    properties:
      id:
        type: number
      name:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: dateTime
      updatedAt:
        type: string
        format: dateTime

  AuthToken:
    properties:
      user:
        $ref: '#/definitions/User'
      token:
        type: string
        description: Token to be used for every api call.
